/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI_Components;
import bankassignment.*;
import static java.lang.Thread.sleep;
import javax.swing.JOptionPane;

/**
 *
 * @author ben.martin
 */
public class SimulatorJFrame extends javax.swing.JFrame {

    /**
     * Creates new form SimulatorJFrame
     */
    
    private static boolean simStatus = true;
    private static int seconds = 5;
    private static int month = 0;
    private Account acc = CreateAccountJFrame.newAccount;
    
    public SimulatorJFrame() {
     /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
        initComponents();
        
        // set initial account details
        displayAccountDetails();
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCreateAccTitle = new javax.swing.JLabel();
        lblTimerName = new javax.swing.JLabel();
        lblCountdown = new javax.swing.JLabel();
        lblNameAccBalance = new javax.swing.JLabel();
        lblDynamicBalance = new javax.swing.JLabel();
        lblTransactionAmount = new javax.swing.JLabel();
        lblAccountTypeName = new javax.swing.JLabel();
        lblAccountType = new javax.swing.JLabel();
        btnStartSimulation = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        transactionList = new javax.swing.JList<>();
        btnStopSimulation = new javax.swing.JButton();
        lblTransactionType = new javax.swing.JLabel();
        lblMonth = new javax.swing.JLabel();
        lblWithdrawNum = new javax.swing.JLabel();
        lblWithdrawName = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        startSim_jMenuItem = new javax.swing.JMenuItem();
        exit_jMenuItem = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCreateAccTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblCreateAccTitle.setText("Transaction Simulator");

        lblTimerName.setText("Timer:");

        lblCountdown.setText("5");

        lblNameAccBalance.setText("Account Balance:");

        lblDynamicBalance.setText("Â£1500");

        lblTransactionAmount.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        lblTransactionAmount.setText("Transaction Value:");

        lblAccountTypeName.setText("Account Type:");

        lblAccountType.setText("Current");

        btnStartSimulation.setText("Start Simulation");
        btnStartSimulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartSimulationActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(transactionList);

        btnStopSimulation.setText("Stop Simulation");
        btnStopSimulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopSimulationActionPerformed(evt);
            }
        });

        lblTransactionType.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        lblTransactionType.setText("Transaction Type:");

        lblMonth.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        lblMonth.setText("Month:");

        lblWithdrawNum.setText("0");

        lblWithdrawName.setText("Withdraws:");

        jMenu2.setText("File");

        startSim_jMenuItem.setText("Start Simulation");
        jMenu2.add(startSim_jMenuItem);

        exit_jMenuItem.setText("Exit");
        exit_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_jMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(exit_jMenuItem);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAccountTypeName)
                            .addComponent(lblTimerName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAccountType)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCountdown)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                                .addComponent(lblWithdrawName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblWithdrawNum))))
                    .addComponent(btnStartSimulation, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTransactionType)
                    .addComponent(lblMonth)
                    .addComponent(lblTransactionAmount))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNameAccBalance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDynamicBalance))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStopSimulation, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(lblCreateAccTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCreateAccTitle)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNameAccBalance)
                            .addComponent(lblDynamicBalance))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnStopSimulation, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnStartSimulation, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAccountTypeName)
                            .addComponent(lblAccountType))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTimerName)
                            .addComponent(lblCountdown)
                            .addComponent(lblWithdrawNum)
                            .addComponent(lblWithdrawName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMonth)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTransactionType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTransactionAmount)))
                .addContainerGap(91, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exit_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_jMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exit_jMenuItemActionPerformed

    private void btnStartSimulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartSimulationActionPerformed
        
        startSimulation();
        
    }//GEN-LAST:event_btnStartSimulationActionPerformed

    private void startSimulation()
    {
        simStatus = true;
        
        Thread t = new Thread()
        {
            public void run()
            {
                for(;;)
                {
                    if(simStatus == true)
                    {
                        beginCountdown();
                    }
                    else
                    {
                        // if the simulation is stopped, break the countdown loop
                        break;
                    }
                }
            }
            
        };
        t.start();
    }
    
    private void beginCountdown()
    {
        try
        {
            // decrement seconds variable every second.
            sleep(1000);
            seconds--;
            if(seconds < 0)
            {
                // when the 5 second countdown ends, execute the monthly transaction
                monthlyTransaction();
            }
                            
            // redisplay timer every second
            lblCountdown.setText(String.valueOf(seconds));
        }
        catch(Exception e){}
    }
    
    private void monthlyTransaction()
    {
        monthlyTimeout();
       
        // create monthly transaction
        Transaction newTrans = new Transaction(acc, month);
  
        // update Simulator GUI Components 
        setTransactionDetails(newTrans);
        displayBalance();
        lblWithdrawNum.setText(String.valueOf(acc.getNumOfWithdrawals()));
    }
    
    private void monthlyTimeout()
    {
        // at every month timeout, the countdown should be reset to 5 seconds and the month counter incremented
        month++;
        seconds = 5;
        
        // monthly timeout message
        JOptionPane.showMessageDialog(null, ("It is the end of Month: " + month), 
                "Monthly Timeout", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void addTrans(Transaction trans)
    {
        transactionList.add(("Month: " + month + " Account: " + acc.getAccountType() + 
                " TransValue: " + trans.getTransValue() + " New Balance: " + acc.getAccountBalance()), this);
    }
    
    private void setTransactionDetails(Transaction trans)
    {
        // set month label to current month
        lblMonth.setText("Month: " + month);
        
        // set the TranValue label to the value generated
        lblTransactionAmount.setText("Transaction Value: Â£" + trans.getTransValue());
        
        // set the TransType label to either deposit or withdrawal
        String transType = "";
        if (trans.getTransType() == 0)
        {
            transType = ("Withdrawal");
        }
        else if (trans.getTransType() == 1)
        {
            transType = ("Deposit");
        }

        lblTransactionType.setText("Transaction Type: " + transType);
    }
    
    private void displayBalance()
    {
        lblDynamicBalance.setText("Â£" + String.format("%.2f", acc.getAccountBalance())); // to 2 decimal places
    }
    
    private void displayAccountType()
    {
        // output the correct account string based on the accountType
        if (acc.getAccountType() == 0)
        {
            lblAccountType.setText("Current");
            lblWithdrawNum.setVisible(false);
            lblWithdrawName.setVisible(false);
        }
        else if (acc.getAccountType() == 1)
        {
            lblAccountType.setText("Savings");
            lblWithdrawNum.setText(String.valueOf(acc.getNumOfWithdrawals()));
        }
    }
    
    private void displayAccountDetails()
    {
        // display the account type and initial balance
        displayBalance();
        displayAccountType();
    }
    
    private void btnStopSimulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopSimulationActionPerformed
        
        simStatus = false;
        JOptionPane.showMessageDialog(null, "Click start simulation to resume.", 
                "Simulation Stopped", JOptionPane.WARNING_MESSAGE);
        
    }//GEN-LAST:event_btnStopSimulationActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimulatorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimulatorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimulatorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimulatorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimulatorJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStartSimulation;
    private javax.swing.JButton btnStopSimulation;
    private javax.swing.JMenuItem exit_jMenuItem;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAccountType;
    private javax.swing.JLabel lblAccountTypeName;
    private javax.swing.JLabel lblCountdown;
    private javax.swing.JLabel lblCreateAccTitle;
    private javax.swing.JLabel lblDynamicBalance;
    private javax.swing.JLabel lblMonth;
    private javax.swing.JLabel lblNameAccBalance;
    private javax.swing.JLabel lblTimerName;
    private javax.swing.JLabel lblTransactionAmount;
    private javax.swing.JLabel lblTransactionType;
    private javax.swing.JLabel lblWithdrawName;
    private javax.swing.JLabel lblWithdrawNum;
    private javax.swing.JMenuItem startSim_jMenuItem;
    private javax.swing.JList<String> transactionList;
    // End of variables declaration//GEN-END:variables
}
